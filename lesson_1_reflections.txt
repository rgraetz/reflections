 How did viewing a diff between two versions of a file help you see the bug that was introduced?
Quickly identify what's changed in a file. Areas that have changed will show you where a bug may have been introduced.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Have access to files for comparisons. Easily roll back to known good version with little effort. Learn from other programmers through comparison.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: Program won't be broken in between versions ie saving in the middle of a line.
Cons: You can forget as the process is manual. Requires discipline.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Dependency on other files. Programming has strong dependency therefore it makes sense to save multiple files.

How can you use the commands git log and git diff to view the history of files?
git log can be used to get committed changes and their ID
git diff can be used to compare committed changes based on ID

How might using version control make you more confident to make changes that could break something?
Because I can always go back to working code. No fear of losing work.

Now that you have your workspace set up, hat do you want to try using Git for?
version control of scripts and machine learning udacity home work files.

